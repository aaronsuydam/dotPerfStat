# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Windows Unit Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

  list-tests:
    runs-on: windows-latest
    needs: build
    outputs: 
      test-matrix: ${{ steps.set-matrix.outputs.text-matrix }}
      
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: 9.0.x
      - id: set-matrix
        shell: pwsh
        run: |
          $raw = dotnet test dotPerfStatTest/dotPerfStatTest.csproj `
            -p:TestingPlatformCaptureOutput=false -- `
            --list-tests --no-build `
            --logger "console;verbosity=quiet"
          
          # drop everything up through the "available:" line
          $lines = $raw -split "`n" | Select-Object -SkipWhile {
            $_ -notmatch '^The following Tests are available:' 
          }
          # skip the header itself and any blank lines
          $tests = $lines | Select-Object -Skip 1 | Where-Object { $_.Trim() -ne '' }
          
          $json = $tests | ConvertTo-Json -Compress
          Write-Output "::set-output name=test-matrix::$json"
  test:
    runs-on: windows-latest
    needs: [build, list-tests]
    
    # Creates one job per test defined in code.
    strategy: 
      fail-fast: false
      matrix: 
        testName: ${{ fromJson(needs.list-tests.output.test-matrix) }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      # Run each test.
      - name: Run ${{ matrix.testName }}
        run: | 
          dotnet test dotPerfStatTest/dotPerfStatTest.csproj \
            --no-build \
            --configuration Release \
            --filter "FullyQualifiedName~${{ matrix.testName }}
